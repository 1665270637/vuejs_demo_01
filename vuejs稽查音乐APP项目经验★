1、常用的命令——————————————————————————————————————
  npm install vue  安装vue
  npm install -g vue-cli 安装脚手架工具
  npm update vue-cli 名字 更新依赖
  vue init webpack myproject 创建项目
  npm install 安装依赖 在根目录下
  npm run dev 启动项目
  npm run build 编译打包


2、安装依赖 ————————————————————————————————————————	
	npm install --save-dev stylus stylus-loader
	npm install  element-ui --save-dev
	npm install fastclick --save  解决点击300毫秒延迟
	npm install babel-runtime --save  ES6语法的转译
	npm install vue-lazyload --save 图片懒加载插件
	npm install better-scroll --save 滚动插件	
	npm install babel-polyfill --dev  对ES6 promis 转译
  饿了么UI用法***
  import ElementUI from 'element-ui'
	import 'element-ui/lib/theme-default/index.css'
	Vue.use(ElementUI)
  
  -save-dev是指将包信息添加到devDependencies，表示你开发时依赖的包裹。 
  -save是指将包信息添加到dependencies，表示你发布时依赖的包裹。 
  
 3、制作小图标————————————————————————————————————
 https://icomoon.io  上传svg 图标制作字体文件
 
 4、重点记忆—————————————————————————————————————— 
  4-2 jsonp的封装使用
  4-8 绕开接口限制
  
  scroll 插件 使用技巧、必须要在warper 的父级 设定一个固定高度，只有这样他的子组件才可以滚动
		position: fixed
    width: 100%
    top: 43px
    bottom: 0
    
  @touchstart.stop.prevent="onShortcutTouchStart"  模拟手机点击事件
  @touchmove.stop.prevent="onShortcutTouchMove" 模拟手机划过事件
  @touchend.stop
  
  computed：{} 计算属性钩子  用来排序啊 大小写啊等js方法处理数据
  created（）{} 抓取数据钩子
  mounted() {} dom钩子
  
 5、目前会的组件—————————————————————————————————————— 
  slider轮播图 组件
  scroll 滚动组件
  vue-lazyload  图片懒加载组件
  fastclick 和 better-scroll 冲突的时候在需要点击的dom上加class="needsclick"
  loading 组件
  
  基础组件
  slider.vue
  scroll.vue
  loading.vue
  listview
  逻辑组件
  ……
  
  6、项目打包————————————————————————————————————————
      1、npm install -g cordova
      2、cordova create cordovaApp com.cordova.testapp
	 cd cordovaApp
	 cordova platform add android
      3、首先修改vue项目的index.html在head之间加入
	<meta http-equiv="Content-Security-Policy" content="default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;">
	<meta name="format-detection" content="telephone=no">
	<meta name="msapplication-tap-highlight" content="no">
	<meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width">
	这里注意加入<meta http-equiv="Content-Security-Policy" content="default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;">这个的时候可能导致页面样式改变，如果改变则不加，否则还是建议加上。
	然后引入cordova.js
	<body>
	    <div id="app"></div>
	    <script type="text/javascript" src="cordova.js"></script>
	    <!-- built files will be auto injected -->
	</body>
       4、然后修改src中的main.js为以下代码 // 不执行也可以
	// The Vue build version to load with the `import` command
	// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
	import Vue from 'vue'
	import App from './App'
	import router from './router'
	Vue.config.productionTip = false

	/* eslint-disable no-new */
	document.addEventListener('deviceready', function() {
	    new Vue({
		el: '#app',
		router,
		store,
		template: '<App/>',
		components: { App }
	    })
	    window.navigator.splashscreen.hide()
	}, false);
	最后修改config文件夹中的index.js文件 修改build中的assetsSubDirectory: 'static', assetsPublicPath: '',
      5、 vue项目   npm run build        
      6、 将vue文件放到cordova项目把dist中所有文件复制到WWW文件下并且内容且替换
      7、 替换cordova项目www文件后  cordova build android   生成apk
